// 泰州海陵
const a = [
  [119.856201, 32.379729],
  [119.861328, 32.373483],
  [119.865463, 32.372218],
  [119.867108, 32.373947],
  [119.871188, 32.373728],
  [119.875635, 32.374476],
  [119.875057, 32.375664],
  [119.876508, 32.381884],
  [119.881709, 32.387716],
  [119.884806, 32.388013],
  [119.883446, 32.38378],
  [119.882518, 32.373147],
  [119.88635, 32.372644],
  [119.893535, 32.373844],
  [119.897753, 32.372979],
  [119.901677, 32.371366],
  [119.901392, 32.373663],
  [119.902715, 32.379367],
  [119.907052, 32.385522],
  [119.910185, 32.39329],
  [119.909561, 32.398825],
  [119.905049, 32.402154],
  [119.90458, 32.405456],
  [119.915451, 32.407791],
  [119.920697, 32.408385],
  [119.924548, 32.410965],
  [119.922627, 32.414835],
  [119.92724, 32.416847],
  [119.928315, 32.41348],
  [119.931742, 32.413648],
  [119.932285, 32.407688],
  [119.94015, 32.408656],
  [119.940132, 32.410861],
  [119.948834, 32.412513],
  [119.947143, 32.41971],
  [119.958427, 32.42603],
  [119.962801, 32.42781],
  [119.962341, 32.432453],
  [119.97232, 32.432711],
  [119.977374, 32.4291],
  [119.979037, 32.430699],
  [119.981868, 32.430596],
  [119.981923, 32.43186],
  [119.986875, 32.43186],
  [119.987261, 32.43284],
  [120.009912, 32.433188],
  [120.007082, 32.434439],
  [120.002405, 32.439456],
  [120.009315, 32.446213],
  [120.012301, 32.450636],
  [120.016105, 32.453099],
  [120.022932, 32.456129],
  [120.025956, 32.458604],
  [120.036449, 32.476537],
  [120.03519, 32.479411],
  [120.037451, 32.48119],
  [120.04392, 32.482479],
  [120.039105, 32.489749],
  [120.03361, 32.490174],
  [120.033362, 32.493718],
  [120.026773, 32.495162],
  [120.026626, 32.496979],
  [120.037754, 32.502868],
  [120.042008, 32.505974],
  [120.041953, 32.506979],
  [120.045087, 32.513357],
  [120.044361, 32.517867],
  [120.03519, 32.534268],
  [120.034464, 32.540902],
  [120.036146, 32.54626],
  [120.035025, 32.549725],
  [120.03111, 32.551606],
  [120.029769, 32.5544],
  [120.032562, 32.56178],
  [120.030329, 32.568129],
  [120.025294, 32.572803],
  [120.014322, 32.574117],
  [120.007504, 32.573537],
  [120.006383, 32.571528],
  [120.006714, 32.56773],
  [120.005713, 32.564716],
  [120.000787, 32.559565],
  [119.997093, 32.560891],
  [119.990156, 32.569133],
  [119.987133, 32.569339],
  [119.981757, 32.564085],
  [119.977733, 32.557376],
  [119.966164, 32.542808],
  [119.961965, 32.546788],
  [119.959603, 32.559385],
  [119.949725, 32.561226],
  [119.948677, 32.563841],
  [119.948595, 32.570769],
  [119.947602, 32.571516],
  [119.948108, 32.575803],
  [119.949578, 32.58013],
  [119.949247, 32.585512],
  [119.947639, 32.585692],
  [119.947235, 32.590584],
  [119.939351, 32.589039],
  [119.939388, 32.590855],
  [119.936723, 32.592593],
  [119.932818, 32.591627],
  [119.933158, 32.590288],
  [119.930612, 32.590636],
  [119.932533, 32.593378],
  [119.930925, 32.593571],
  [119.932101, 32.597523],
  [119.928885, 32.597433],
  [119.931954, 32.600432],
  [119.928242, 32.600304],
  [119.927589, 32.601565],
  [119.925145, 32.601411],
  [119.924373, 32.605285],
  [119.919549, 32.604075],
  [119.916572, 32.612455],
  [119.912464, 32.612043],
  [119.908293, 32.613639],
  [119.908329, 32.615685],
  [119.906629, 32.616458],
  [119.907438, 32.619855],
  [119.913935, 32.619932],
  [119.911867, 32.625145],
  [119.902917, 32.623768],
  [119.900629, 32.623961],
  [119.898791, 32.619443],
  [119.898644, 32.616509],
  [119.893976, 32.618375],
  [119.89405, 32.619945],
  [119.890549, 32.620344],
  [119.887342, 32.619315],
  [119.881489, 32.618954],
  [119.881581, 32.617127],
  [119.876655, 32.615968],
  [119.875525, 32.619495],
  [119.869534, 32.619379],
  [119.870379, 32.623086],
  [119.868018, 32.623575],
  [119.869286, 32.625183],
  [119.870324, 32.630125],
  [119.867081, 32.63091],
  [119.866603, 32.627615],
  [119.864159, 32.629147],
  [119.861099, 32.629533],
  [119.860051, 32.631463],
  [119.855034, 32.631888],
  [119.855668, 32.63441],
  [119.853279, 32.63661],
  [119.846737, 32.636739],
  [119.846755, 32.638772],
  [119.844513, 32.638592],
  [119.844614, 32.640342],
  [119.83299, 32.640895],
  [119.830123, 32.6323],
  [119.828359, 32.632518],
  [119.828726, 32.629366],
  [119.825538, 32.628413],
  [119.814383, 32.627075],
  [119.814263, 32.62369],
  [119.815871, 32.620035],
  [119.816119, 32.614887],
  [119.817994, 32.615402],
  [119.821771, 32.607268],
  [119.821118, 32.605092],
  [119.81577, 32.605659],
  [119.813684, 32.604346],
  [119.815081, 32.602878],
  [119.814962, 32.600291],
  [119.817011, 32.598965],
  [119.816312, 32.597716],
  [119.818729, 32.596995],
  [119.818848, 32.59424],
  [119.820172, 32.594086],
  [119.818123, 32.587636],
  [119.816377, 32.584005],
  [119.81566, 32.578739],
  [119.819777, 32.57243],
  [119.824077, 32.563596],
  [119.827174, 32.559153],
  [119.834368, 32.556448],
  [119.835388, 32.554581],
  [119.835508, 32.549764],
  [119.832898, 32.544779],
  [119.830417, 32.543002],
  [119.823406, 32.535376],
  [119.822938, 32.529192],
  [119.824095, 32.523652],
  [119.824343, 32.514698],
  [119.825042, 32.511231],
  [119.824417, 32.508719],
  [119.825143, 32.50618],
  [119.825244, 32.501348],
  [119.824546, 32.496322],
  [119.818187, 32.491656],
  [119.817562, 32.489375],
  [119.817727, 32.477903],
  [119.814539, 32.468854],
  [119.81985, 32.465502],
  [119.829673, 32.460345],
  [119.840543, 32.46447],
  [119.85066, 32.465399],
  [119.853389, 32.462756],
  [119.856311, 32.453499],
  [119.856752, 32.450494],
  [119.859252, 32.444472],
  [119.86267, 32.442087],
  [119.866676, 32.440836],
  [119.868496, 32.438721],
  [119.866483, 32.434646],
  [119.864857, 32.427346],
  [119.866382, 32.426559],
  [119.867016, 32.422277],
  [119.864333, 32.422445],
  [119.8638, 32.417118],
  [119.861025, 32.417105],
  [119.856118, 32.415621],
  [119.855889, 32.413764],
  [119.85349, 32.411481],
  [119.851744, 32.411171],
  [119.854069, 32.40414],
  [119.853885, 32.401676],
  [119.849264, 32.401276],
  [119.849548, 32.400051],
  [119.847132, 32.39818],
  [119.847481, 32.396167],
  [119.844577, 32.395961],
  [119.846194, 32.389819],
  [119.84964, 32.391097],
  [119.851138, 32.387664],
  [119.851294, 32.384942],
  [119.8535, 32.383651],
  [119.856201, 32.379729]
]

// 泰州高港
const b = [
  [119.856201, 32.379729],
  [119.853711, 32.361506],
  [119.846433, 32.363468],
  [119.84273, 32.36068],
  [119.84443, 32.355362],
  [119.84477, 32.349385],
  [119.844347, 32.34457],
  [119.844807, 32.34204],
  [119.842004, 32.33889],
  [119.841931, 32.336837],
  [119.843759, 32.334952],
  [119.847315, 32.328432],
  [119.846406, 32.325475],
  [119.84386, 32.321873],
  [119.833606, 32.313182],
  [119.831428, 32.312549],
  [119.826448, 32.308546],
  [119.822588, 32.306118],
  [119.819179, 32.302528],
  [119.826337, 32.298911],
  [119.834571, 32.295708],
  [119.839836, 32.291898],
  [119.843006, 32.290218],
  [119.845092, 32.287867],
  [119.8527, 32.281938],
  [119.866695, 32.26575],
  [119.869552, 32.262688],
  [119.870821, 32.260129],
  [119.878475, 32.247543],
  [119.882858, 32.233675],
  [119.885559, 32.226036],
  [119.886717, 32.220491],
  [119.887489, 32.211532],
  [119.891992, 32.201085],
  [119.89258, 32.194646],
  [119.893499, 32.190042],
  [119.894068, 32.182904],
  [119.89745, 32.171807],
  [119.90096, 32.16393],
  [119.901888, 32.159765],
  [119.905168, 32.152262],
  [119.921368, 32.171031],
  [119.919255, 32.172325],
  [119.919374, 32.173799],
  [119.925981, 32.181921],
  [119.92894, 32.190611],
  [119.93188, 32.194905],
  [119.93483, 32.197387],
  [119.93777, 32.201564],
  [119.939856, 32.205869],
  [119.942328, 32.214816],
  [119.946978, 32.228104],
  [119.946555, 32.22994],
  [119.949569, 32.230535],
  [119.948034, 32.231336],
  [119.952932, 32.237075],
  [119.954834, 32.237462],
  [119.955597, 32.239815],
  [119.955073, 32.24364],
  [119.950947, 32.247659],
  [119.950782, 32.25319],
  [119.946252, 32.261745],
  [119.947777, 32.264548],
  [119.94672, 32.264755],
  [119.947161, 32.268089],
  [119.950635, 32.267779],
  [119.95329, 32.268515],
  [119.954062, 32.271848],
  [119.947189, 32.272624],
  [119.948632, 32.276202],
  [119.946729, 32.276512],
  [119.948347, 32.278088],
  [119.9508, 32.282584],
  [119.951848, 32.28261],
  [119.952188, 32.28686],
  [119.943568, 32.289792],
  [119.942843, 32.294403],
  [119.944524, 32.294442],
  [119.945406, 32.297],
  [119.944441, 32.303277],
  [119.945388, 32.308468],
  [119.943706, 32.311374],
  [119.946555, 32.313879],
  [119.952693, 32.31357],
  [119.958114, 32.312046],
  [119.969757, 32.306183],
  [119.97493, 32.306118],
  [119.979138, 32.309592],
  [119.98512, 32.312601],
  [119.99135, 32.313182],
  [119.9994, 32.31171],
  [120.007008, 32.308107],
  [120.012264, 32.303845],
  [120.013477, 32.296263],
  [120.013201, 32.292505],
  [120.015949, 32.288642],
  [120.022096, 32.287286],
  [120.030918, 32.286266],
  [120.035852, 32.282403],
  [120.039491, 32.275802],
  [120.042394, 32.274833],
  [120.047411, 32.278476],
  [120.051372, 32.283566],
  [120.065394, 32.287351],
  [120.073875, 32.292931],
  [120.079848, 32.30028],
  [120.08187, 32.303354],
  [120.080537, 32.3071],
  [120.07779, 32.310251],
  [120.077716, 32.315571],
  [120.0702, 32.323719],
  [120.06839, 32.329723],
  [120.071137, 32.336101],
  [120.073315, 32.342479],
  [120.071422, 32.347281],
  [120.074133, 32.350934],
  [120.061764, 32.349269],
  [120.053917, 32.348972],
  [120.047586, 32.351038],
  [120.031735, 32.358886],
  [120.025055, 32.357388],
  [120.02273, 32.357956],
  [120.021646, 32.361119],
  [120.021628, 32.365997],
  [120.024623, 32.368501],
  [120.033132, 32.374115],
  [120.038195, 32.379922],
  [120.038994, 32.381961],
  [120.03803, 32.3836],
  [120.033555, 32.387768],
  [120.029668, 32.392658],
  [120.024853, 32.397509],
  [120.018053, 32.39867],
  [120.015223, 32.400528],
  [120.007256, 32.409352],
  [120.004968, 32.417131],
  [120.021701, 32.418691],
  [120.022473, 32.421232],
  [120.014947, 32.428043],
  [120.012567, 32.431344],
  [120.009912, 32.433188],
  [119.987261, 32.43284],
  [119.986875, 32.43186],
  [119.981923, 32.43186],
  [119.981868, 32.430596],
  [119.979037, 32.430699],
  [119.977374, 32.4291],
  [119.97232, 32.432711],
  [119.962341, 32.432453],
  [119.962801, 32.42781],
  [119.958427, 32.42603],
  [119.947143, 32.41971],
  [119.948834, 32.412513],
  [119.940132, 32.410861],
  [119.94015, 32.408656],
  [119.932285, 32.407688],
  [119.931742, 32.413648],
  [119.928315, 32.41348],
  [119.92724, 32.416847],
  [119.922627, 32.414835],
  [119.924548, 32.410965],
  [119.920697, 32.408385],
  [119.915451, 32.407791],
  [119.90458, 32.405456],
  [119.905049, 32.402154],
  [119.909561, 32.398825],
  [119.910185, 32.39329],
  [119.907052, 32.385522],
  [119.902715, 32.379367],
  [119.901392, 32.373663],
  [119.901677, 32.371366],
  [119.897753, 32.372979],
  [119.893535, 32.373844],
  [119.88635, 32.372644],
  [119.882518, 32.373147],
  [119.883446, 32.38378],
  [119.884806, 32.388013],
  [119.881709, 32.387716],
  [119.876508, 32.381884],
  [119.875057, 32.375664],
  [119.875635, 32.374476],
  [119.871188, 32.373728],
  [119.867108, 32.373947],
  [119.865463, 32.372218],
  [119.861328, 32.373483],
  [119.856201, 32.379729]
]

/**
 * 处理地图区域之间的交界，其实很好理解，重复出现的点说明是交点，去掉这些点则去掉地图交界
 * 注意这不是去重，而是一个点如果多次出现，则直接去掉这个点
 */

function dealMapBorder(firstArr, secondArr) {
  const repeatArr = [] // 生成重复元素数组，重复元素就是地图间的边界
  const concatArr = firstArr.concat(secondArr)
  for (let i = 0; i < concatArr.length; i++) {
    for (let k = 0; k < concatArr.length; k++) {
      if (i !== k && concatArr[i][0] === concatArr[k][0] && concatArr[i][1] === concatArr[k][1]) {
        repeatArr.push([concatArr[i][0], concatArr[i][1]])
        concatArr.splice(k, 1) // 删除数组元素，会影响长度
        k-- // 因为长度少了一，索引需要减去一
      }
    }
  }
  // 比较两个二维数组，删除第一个数组中跟第二个数组中相同的元素
  for (let i = 0; i < concatArr.length; i++) {
    for (let k = 0; k < repeatArr.length; k++) {
      if (concatArr[i][0] === repeatArr[k][0] && concatArr[i][1] === repeatArr[k][1]) {
        concatArr.splice(i, 1)
        if (i > 1) i--
      }
    }
  }
  return concatArr
}

console.log(dealMapBorder(a, b).length, a.length, b.length)
